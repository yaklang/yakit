{
  "MITMPage": {
    "mitmServerStopped": "{MITM} 劫持服务器已关闭",
    "mitmServerErrorOrStopped": "MITM 劫持服务器异常或被关闭",
    "startMitmServerError": "启动 MITM 服务器 ERROR!",
    "startMitmFailed": "启动中间人劫持失败：",
    "or": "或"
  },
  "MITMServerStartForm": {
    "getRuleListFailed": "获取规则列表失败：",
    "confirmEnableWithReplacementRules": "检测到开启了替换规则，可能会影响劫持，是否确认开启？",
    "goToSettings": "去配置",
    "currentMitmVersion": "当前使用的是MITM v1版本",
    "hijackProxyListenHost": "劫持代理监听主机",
    "remoteModeTip": "远程模式可以修改为 0.0.0.0 以监听主机所有网卡",
    "hijackProxyListenPort": "劫持代理监听端口",
    "downstreamProxy": "下游代理",
    "upstreamProxyTip": "为经过该MITM代理的请求再设置一个代理，通常用于访问中国大陆无法访问的网站或访问特殊网络/内网，也可用于接入被动扫描，代理如有密码格式为：http://user:pass@ip:port",
    "configureProxyAuth": "配置代理认证",
    "proxyAddressExample": "例如 http://127.0.0.1:7890 或者 socks5://127.0.0.1:7890",
    "http2Support": "HTTP/2.0 支持",
    "http2SupportTip": "开启该选项将支持 HTTP/2.0 劫持，关闭后自动降级为 HTTP/1.1，开启后 HTTP2 协商失败也会自动降级",
    "httpsConfig": "HTTPS 配置",
    "gmTlsHijackTip": "适配国密算法的 TLS (GM-tls) 劫持，对目标网站发起国密 TLS 的连接",
    "randomizeClientHelloTip": "访问时随机客户端握手(ClientHello)消息，用于规避服务器对 TLS 指纹的检测(TLS指纹是一种用于通过分析客户端在建立安全连接时发送的握手信息来识别和分类SSL/TLS客户端的特征方法)",
    "noGmAndRandomTlsFingerprint": "不配置国密和随机TLS指纹",
    "randomTLSFingerprint": "随机TLS指纹",
    "default": "默认",
    "guomi": "国密",
    "disableHijackKeepAlive": "禁用劫持长连接",
    "mitmDisableKeepAlive": "MITM劫持禁用长连接，每个劫持连接处理一个请求响应后会自动关闭",
    "contentRules": "内容规则",
    "applyRules": "使用规则进行匹配、替换、标记、染色，同时配置生效位置",
    "defaultConfig": "默认配置",
    "existingRulesCount": "现有规则 {count} 条",
    "enablePlugin": "启用插件",
    "hijackStart": "劫持启动",
    "mitmHijackV2": "MITM 劫持 v2",
    "advancedConfig": "高级配置"
  },
  "MITMFormAdvancedConfiguration": {
    "advancedConfig": "高级配置",
    "certificateFileName": "{CerName}-证书.json",
    "saveAdvancedConfigConfirm": "请问是否要保存高级配置并关闭弹框？",
    "dnsServer": "DNS服务器",
    "customDNSServer": "指定DNS服务器",
    "exampleIP": "例如 1.1.1.1",
    "hostsConfig": "Hosts配置",
    "addHostsMapping": "添加 Hosts 映射",
    "gmTLSPriority": "国密TLS优先",
    "gmTLSPriorityTip": "启用此选项将优先选择国密TLS，当连接失败后，自动降级为普通 TLS，关闭后优先普通 TLS",
    "gmTLSOnly": "仅国密 TLS",
    "gmTLSOnlyTip": "此选项开启后，将不支持除国密算法的 TLS 外其安全传输层",
    "proxyAuthentication": "代理认证",
    "hijackProxyAuthTip": "为劫持代理启动认证，需要在代理客户端配置代理认证信息",
    "proxyAuthUsername": "代理认证用户名",
    "proxyAuthPassword": "代理认证密码",
    "filterWebSocket": "过滤WebSocket",
    "disableHomePage": "禁用初始页",
    "disableHomePageTip": "开启后免配置启动不会访问初始页面",
    "enableWebSocketCompression": "启用WebSocket压缩",
    "pluginConcurrentProcesses": "插件并发进程",
    "clientTLSImport": "客户端 TLS 导入",
    "clientTLSImportTip": "用于 mTLS（Mutual TLS）开启客户端验证的 HTTPS 网站抓包",
    "filter": "过滤器",
    "certificateDownload": "证书下载"
  },
  "MITMHijackedContent": {
    "listening": "监听中...",
    "getMitmFiltersFailed": "获取 MITM 过滤器失败：",
    "deleteFilterContainsAllFailed": "删除过滤器中包含项的所有内容失败：",
    "enableAllNoReplaceRuleSuccess": "已成功开启规则“全部不替换”按钮",
    "closeFailed": "关闭失败",
    "getRulesListFailed": "获取规则列表失败：",
    "replaceRule": "替换规则",
    "filter": "过滤器",
    "getHijackFilterFailed": "获取 条件劫持 过滤器失败：",
    "mitmErrorInvalidResponse": "BUG: MITM 错误，未能获取到正确的 Response 或 Response ID",
    "triggeredConditionalHijack": "已触发 条件 劫持",
    "hijackAllResponseContent": "劫持所有响应内容",
    "hijackRequestOnly": "仅劫持请求",
    "refreshSuccess": "刷新成功",
    "autoAllowRequestsTip": "勾选以后会默认放行所有请求，劫持对应响应",
    "responseOnly": "只看响应",
    "batchAllow": "批量放行",
    "batchDiscard": "批量丢弃",
    "batchHijackResponse": "批量劫持响应",
    "allowAll": "全部放行",
    "manualHijack": "手动劫持",
    "conditionalHijack": "条件劫持",
    "autoAllow": "自动放行",
    "passiveLog": "被动日志",
    "plugin_check_tip": "检测到配置 <openReplace/> 和 <openWhite/> 白名单，如抓包有问题可先将配置 <close/> <tooltip/>。检测到加载 {{pluginCount}} 个插件，如抓包有问题可点击 <clear/> 取消加载插件。",
    "closeEnableAllNoReplaceRuleTip": "关闭则会开启规则“全部不替换”按钮，并删除过滤器中包含项的所有内容",
    "plugin_config_tip": "检测到配置 <openReplace/> 和 <openWhite/> 白名单，如抓包有问题可先将配置 <close/> <tooltip/>",
    "close_rule_tip": "关闭则会开启规则“全部不替换”按钮，并删除过滤器中包含项的所有内容",
    "plugin_white_filter_tip": "检测到配置 <openWhite/> 白名单，如抓包有问题可先将白名单设置 <close/> <tooltip/>。检测到加载 {{pluginCount}} 个插件，如抓包有问题可点击 <clear/> 取消加载插件。",
    "close_filter_tip": "关闭则会删除过滤器中包含项的所有内容",
    "plugin_replace_rule_tip": "检测到配置 <openReplace/>，如抓包有问题可先将替换 <close/> <tooltip/>。检测到加载 {{pluginCount}} 个插件，如抓包有问题可点击 <clear/> 取消加载插件。",
    "close_rule_tip2": "关闭则会开启“全部不替换”按钮",
    "plugin_white_filter_tip_simple": "检测到配置 <openWhite/>，如抓包有问题可先将白名单设置 <close/> <tooltip/>",
    "close_filter_tip2": "关闭则会删除过滤器中包含项的所有内容",
    "plugin_replace_rule_tip_simple": "检测到配置 <openReplace/>，如抓包有问题可先将替换 <close/> <tooltip/>",
    "close_rule_tip3": "关闭则会开启“全部不替换”按钮",
    "plugin_loaded_tip": "检测到加载 {{pluginCount}} 个插件，如抓包有问题可点击 <clear/> 取消加载插件"
  },
  "MITMManual": {
    "triggeredConditionalHijack": "已触发 条件 劫持",
    "arrivalOrder": "到达顺序",
    "status": "状态",
    "method": "方法",
    "markColor": "标记颜色",
    "hijackResponseAction": "劫持响应",
    "request": "请求",
    "response": "响应",
    "releaseWithStatus": "放行{getStatusStr}",
    "discardWithStatus": "丢弃{getStatusStr}"
  },
  "MITMV2ManualEditor": {
    "switchToAutoHijackMode": "切换为自动劫持模式",
    "allowData": "放行数据",
    "discardData": "丢弃数据",
    "hijackThisResponse": "劫持该响应",
    "render": "渲染",
    "response": "响应",
    "request": "请求",
    "hijackResponseAction": "劫持响应",
    "discard": "丢弃",
    "allow": "放行",
    "waitingForHijack": "等待劫持",
    "wsHijack": "WS 劫持",
    "hijackRequest": "劫持请求"
  },
  "MITMManualEditor": {
    "switchToAutoHijackMode": "切换为自动劫持模式",
    "allowThisHttpResponse": "放行该 HTTP Response",
    "discardThisHttpResponse": "丢弃该 HTTP Response",
    "hijackResponseOfRequest": "劫持该 Request 对应的响应",
    "listening": "监听中..."
  },
  "MITMManualHeardExtra": {
    "labelColor": "标注颜色：",
    "none": "无",
    "hijackResponse": "劫持响应：",
    "discardData": "丢弃数据",
    "submitData": "提交数据"
  },
  "ManualUrlInfo": {
    "targetListening": "目标：监听中...",
    "target": "目标：",
    "response": "响应",
    "request": "请求",
    "httpResponse": "HTTP 响应",
    "httpRequest": "HTTP 请求"
  },
  "MITMLogHeardExtra": {
    "advancedFilter": "高级筛选",
    "configured": "已配置",
    "processFilter": "进程筛选"
  },
  "MITMServerHijacking": {
    "startInitialMitmPluginSuccess": "启动初始 MITM 插件成功",
    "stopMitmFailed": "停止中间人劫持失败：",
    "hijackHttpRequest": "劫持 HTTP Request",
    "filterWebSocket": "过滤WebSocket：",
    "downstreamProxy": "下游代理",
    "ruleConfig": "规则配置",
    "filter": "过滤器",
    "certificateDownload": "证书下载",
    "gmTLSOnly": "仅国密 TLS",
    "enableProxyAuth": "开启代理认证"
  },
  "DownStreamAgentModal": {
    "downstreamProxy": "下游代理",
    "configureProxyAuth": "配置代理认证",
    "proxyAddressExample": "例如 http://127.0.0.1:7890 或者 socks5://127.0.0.1:7890"
  },
  "MITMFiltersModal": {
    "mitmFilterResetCommandSent": "MITM 过滤器重置命令已发送",
    "updateMitmFilterStatus": "更新 MITM 过滤器状态",
    "editFilterSuccess": "编辑{editFilterName}成功",
    "updateMitmFilterFailed": "更新 MITM 过滤器失败：",
    "updateHijackFilterStatus": "更新 劫持 过滤器状态",
    "updateHijackFilterFailed": "更新 劫持 过滤器失败：",
    "getMitmFiltersFailed": "获取 MITM 过滤器失败：",
    "getHijackFiltersFailed": "获取 劫持 过滤器失败：",
    "saveFilterConfig": "保存过滤器配置",
    "saveConditionalMitmConfig": "保存条件劫持配置",
    "pleaseEnterName": "请输入名字",
    "saveSuccess": "存储成功",
    "nameAlreadyExists": "此名字重复",
    "basicConfig": "基础配置",
    "advancedConfig": "高级配置",
    "exportConfig": "导出配置",
    "importConfig": "导入配置",
    "importFromJson": "从 JSON 中导入",
    "resetFilter": "重置过滤器",
    "saveAndApply": "保存并应用",
    "tip": "提示：",
    "conditionMatchTip": "1、符合条件的数据会自动跳转到手动劫持查看，其余数据自动放行",
    "basicConfigMatchTip": "2、基础配置除Content-Type和文件后缀外默认都按关键字匹配，如需要正则和glob模式匹配请在高级配置中配置",
    "basicConfigKeywordTip": "基础配置除Content-Type和文件后缀外默认都按关键字匹配，如需要正则和glob模式匹配请在高级配置中配置",
    "nameYourFilter": "请为{name}配置取个名字...",
    "filter": "过滤器",
    "edit_hijack_filter": "{{prefix}}条件劫持",
    "edit_filter_config": "{{prefix}}过滤器配置"
  },
  "ImportFileModal": {
    "importFileFormatInvalid": "导入文件不符合格式要求",
    "import_text": "可将文件拖入框内，或 <input/> <button>点击此处</button> 上传，也支持直接粘贴代码"
  },
  "MitmFilterHistoryStore": {
    "historyStorage": "历史存储",
    "cannotDeleteEditingFilter": "正在编辑{editFilterName}，暂无法删除"
  },
  "MITMCertificateDownloadModal": {
    "yakitGMZSCertificate": "{yakit}国密证书.crt.pem",
    "yakitCertificate": "{yakit}证书.crt.pem",
    "downloadCertificateForHttpsHijack": "下载证书以劫持 HTTPS",
    "downloadAndOpenLocally": "下载到本地并打开",
    "accessAfterSettingProxy": "在设置代理后访问：",
    "autoDownloadCertificate": "可自动下载证书",
    "sslTlsCertificate": "SSL/TLS证书",
    "gmSslTlsCertificate": "国密SSL/TLS证书"
  },
  "ChromeLauncherButton": {
    "closeAllChromeProxySuccess": "关闭所有免配置 Chrome 成功",
    "closeAllChromeFailed": "关闭所有 Chrome 失败：",
    "confirmEnableWithReplacementRules": "检测到开启了替换规则，可能会影响劫持，是否确认开启？",
    "goToSettings": "去配置",
    "noConfigStart": "免配置启动",
    "closeAllNoConfigChrome": "关闭所有免配置 Chrome",
    "confirmStartNoConfig": "确定启动免配置 Chrome 参数"
  },
  "MITMChromeLauncher": {
    "chromeStartFailed": "Chrome 启动失败：{e}，请尝试选择启动默认配置",
    "configureProxy": "配置代理",
    "saveUserData": "保存用户数据",
    "setNewPathForNewWindow": "如要打开新窗口，请设置新路径存储用户数据",
    "setStoragePath": "设置存储路径",
    "selectStoragePath": "选择存储路径",
    "pleaseSelectFolder": "请选择文件夹",
    "startNoConfigChrome": "启动免配置 Chrome",
    "startWithPresetParams": "预设参数启动",
    "startWithMinimalParams": "最小化参数启动",
    "moreParameters": "更多参数",
    "browserParameterConfig": "浏览器参数配置",
    "unsavedEditWarning": "存在编辑项未保存，请点击保存按钮",
    "duplicateParameterName": "存在相同参数名：",
    "parameterNameNotFilled": "存在参数名未填写",
    "start_proxy_tip": "本按钮将会启动一个代理已经被正确配置的 Chrome (使用系统 Chrome 浏览器配置)<br /><mark>无需用户额外启用代理</mark>，同时把测试浏览器和日常浏览器分离",
    "ignore_cert_tip": "<mark>注意：</mark><br/>免配置的浏览器启用了 <code>{{flag}}</code><br/>这个选项是 <mark>生效的</mark>，会忽略所有证书错误，<mark>仅推荐安全测试时开启</mark>",
    "preset_param_tip": "预设参数可在更多参数里配置启用参数和参数值，最小化参数不可配置，选择预设参数 <error>无法启动</error> 时，请选择最小化参数启动"
  },
  "ChromeLauncherParamsSet": {
    "confirmRestoreDefaultParams": "确认恢复默认参数",
    "restoreAllParamsWarning": "确定要将所有参数恢复到默认状态吗？这将丢失所有自定义设置。",
    "defaultParamsRestored": "已恢复默认参数设置",
    "parameterName": "参数名",
    "variableValue": "变量值（bool类型值为空）",
    "enterParameterNameToSearch": "请输入参数名搜索",
    "restoreDefaultParameters": "恢复默认参数",
    "addNewParameter": "添加新参数"
  },
  "MITMServer": {
    "loadingMitmPlugin": "加载 MITM 插件[{id}]",
    "startMitmPluginSuccess": "启动 MITM 插件成功",
    "startMitmPluginFailed": "启动 MITM 插件失败：",
    "plugin": "插件"
  },
  "PluginGroup": {
    "pluginGroup": "插件组",
    "addGroup": "添加分组",
    "pluginsRemovedFromGroup": "{value1}个插件已从“{value2}”组移除",
    "pluginsAddedToGroup": "{value1}个插件已添加至“{value2}”组"
  },
  "PluginSearch": {
    "getPluginGroupFailed": "获取插件组失败：",
    "keyword": "关键字",
    "fullTextSearch": "全文搜索"
  },
  "MITMPluginLocalList": {
    "getOrImportPluginsTip": "可一键获取官方云端插件，或导入外部插件源",
    "getCloudPlugins": "获取云端插件",
    "importPluginSource": "导入插件源"
  },
  "YakitGetOnlinePlugin": {
    "stopDownload": "停止下载：",
    "cloudPluginDownloading": "云端插件下载中..."
  },
  "MITMYakScriptLoader": {
    "cancelViewPluginTraffic": "取消查看该插件流量",
    "viewPluginTraffic": "查看该插件流量",
    "sendToHotReloadForDebug": "发送到【热加载】中调试代码？",
    "sourceCode": "源码",
    "helpInfo": "帮助信息"
  },
  "MitmHasParamsDrawer": {
    "parameterSettings": "参数设置："
  },
  "MitmHasParamsForm": {
    "jsonSchemaValidationFailed": "jsonSchema校验失败"
  },
  "MITMPluginHijackContent": {
    "all": "全部",
    "enabled": "已启用",
    "hotReload": "热加载",
    "pluginTracking": "插件追踪",
    "startMitmPluginSuccess": "启动 MITM 插件成功",
    "updateMitmPluginStatusFailed": "更新 MITM 插件状态失败：",
    "saveLocalPluginSuccess": "保存本地插件成功",
    "savePluginFailed": "保存插件失败：",
    "updateTemplateSuccess": "更新模板 {tempName} 成功",
    "updateTemplateFailed": "更新模板 {tempName} 失败：",
    "engineConsole": "引擎Console",
    "mitmInteractiveHijackV1NotSupported": "MITM 交互式劫持v1 暂不支持",
    "interactivePlugin": "交互插件",
    "passivePlugin": "被动插件",
    "confirmResetHotReloadCode": "确认重置热加载代码？",
    "updateAndSaveCurrentTemplate": "更新当前模板并保存",
    "saveAsNewTemplate": "另存为新模板",
    "stopSuccess": "停止成功",
    "enterPluginNameToSearch": "请输入插件名称搜索",
    "pluginName": "插件名称：",
    "saveSourceCode": "保存源码"
  },
  "PluginTrace": {
    "pluginName": "插件名称",
    "hookName": "Hook名称",
    "status": "状态",
    "callParameters": "调用参数",
    "startTime": "开始时间{colon}",
    "durationMs": "耗时（ms）",
    "errorMessage": "错误信息",
    "pluginTracking": "插件追踪",
    "pluginTrackingTip": "开启追踪后可查看插件具体的执行情况和执行失败的原因",
    "startTracking": "开始追踪",
    "enterPluginOrHookNameToSearch": "请输入插件名或Hook名进行搜索",
    "totalCount": "总数",
    "stopTracking": "停止追踪",
    "listNotFound": "列表未找到，暂无法定位",
    "statusCompletedAndRemoved": "：状态已执行完成，已自动从列表移除，暂无法定位"
  },
  "ImportLocalPlugin": {
    "importLocalPluginSuccess": "导入本地插件成功",
    "pluginSource": "插件源",
    "proxy": "代理",
    "accessRepoViaProxy": "通过代理访问中国大陆无法访问的代码仓库：例如http://127.0.0.1:7890",
    "localPluginPath": "本地插件路径",
    "enterLocalPluginPath": "请输入本地插件路径",
    "password": "密码",
    "nucleiPoCLocalPath": "Nuclei PoC 本地路径",
    "pluginID": "插件ID",
    "enterPluginID": "请输入插件ID，多个ID用”英文逗号“或”换行“分割...",
    "importOnlineNuclei": "导入线上Nuclei",
    "enterNucleiPoCLocalPath": "请输入Nuclei PoC 本地路径",
    "importLocalNuclei": "导入本地Nuclei",
    "pluginImportSuccess": "插件导入成功",
    "pluginImportMethod": "导入插件方式",
    "externalResourceWarning": "导入外部资源存在潜在风险，可能会被植入恶意代码或Payload，造成数据泄露、系统被入侵等严重后果。请务必谨慎考虑引入外部资源的必要性，并确保资源来源可信、内容安全。如果确实需要使用外部资源，建议优先选择官方发布的安全版本，或自行编写可控的数据源。同时，请保持系统和软件的最新版本，及时修复已知漏洞，做好日常安全防护。",
    "onlineNuclei": "线上 Nuclei",
    "localPlugin": "本地插件",
    "localNuclei": "本地 Nuclei"
  },
  "MITMFilters": {
    "includeHostname": "包含 Hostname",
    "excludeHostname": "排除 Hostname",
    "includeUrlPath": "包含 URL 路径",
    "uriMatchExplanation": "可理解为 URI 匹配，例如 /main/index.php?a=123",
    "excludeUrlPath": "排除 URL 路径",
    "uriFilterExplanation": "可理解为 URI 过滤，例如 /main/index",
    "includeFileExtension": "包含文件后缀",
    "excludeFileExtension": "排除文件后缀",
    "excludeContentType": "排除 Content-Type",
    "excludeHttpMethod": "排除 HTTP 方法"
  },
  "MITMAdvancedFilters": {
    "addAdvancedConfig": "添加高级配置",
    "noConditionSet": "暂未设置条件",
    "completeExistingConditionBeforeAdding": "请将已添加条件配置完成后再新增",
    "rule": "规则"
  },
  "MITMAdvancedFiltersItem": {
    "completeExistingConditionBeforeAdding": "请将已添加条件配置完成后再新增",
    "usageScope": "使用范围",
    "matchType": "匹配类型",
    "regex": "正则",
    "excludeHostnames": "排除 Hostnames",
    "includeHostnames": "包含 Hostnames",
    "excludeUris": "排除 URL路径",
    "includeUris": "包含 URL路径",
    "excludeMethods": "排除 HTTP方法"
  },
  "MITMRule": {
    "request": "请求",
    "response": "响应",
    "execution_order": "执行顺序",
    "rule_name": "规则名称",
    "rule_content": "规则内容",
    "replacement_result": "替换结果",
    "http_header_cookie_priority_tip": "HTTP Header 与 HTTP Cookie 优先级较高，会覆盖文本内容",
    "on_off": "开/关",
    "discard_result": "丢弃结果",
    "enable_substitute_then_discard_tip": "设置开启替代之后，可丢弃当前请求/响应",
    "auto_resend": "自动重发",
    "option_no_replace_request_tip": "该选项仅对请求生效，开启后不会替换（请求）数据包，会把替换后的结果进行额外发包",
    "rule_scope": "规则作用域",
    "select_request_or_response_header_body_tip": "选择请求或响应后，Header和Body至少选择一个",
    "effective_url": "生效URL",
    "hit_color": "命中颜色",
    "append_tag": "追加标签",
    "replace_rule_effect_warning": "检测到开启了替换规则，可能会影响劫持，是否确认开启？",
    "drag_disabled_tip": "拖拽已失效，只能在同一状态下的规则中进行拖拽",
    "save_rule_and_close_prompt": "请问是否要保存规则内容并关闭弹框？",
    "content_rule_configuration": "内容规则配置",
    "official_website": "官方网站",
    "existing_mitm_content_rules": "现有 MITM 内容规则",
    "total_rules_count": "共 {count} 条规则",
    "no_replace_all": "全部不替换",
    "add_rule": "新增规则",
    "default_Configuration": "默认配置"
  },
  "RuleExportAndImportButton": {
    "import_configuration": "导入配置",
    "export_configuration": "导出配置",
    "export_configuration_json": "导出配置 JSON"
  },
  "MITMRuleImport": {
    "please_enter_data": "请填入数据!",
    "import_from_json": "从 JSON 中导入",
    "copy_json_into_box_tip": "可复制 JSON 代码到方框区域内",
    "use_default_configuration": "使用默认配置",
    "overwrite_existing_rules": "覆盖现有规则"
  },
  "MITMRuleFromModal": {
    "edit_rule": "修改规则",
    "add_rule": "新增规则",
    "add_this_rule": "添加该规则",
    "rule_group": "规则组",
    "group_matching_tip": "输入0匹配所有，输入数字匹配输入的组，不写默认匹配第一组",
    "replacement_result": "替换结果",
    "http_header_cookie_priority_tip": "HTTP Header 与 HTTP Cookie 优先级较高，会覆盖文本内容",
    "text": "文本",
    "enter_content_to_replace_tip": "输入想要替换的内容，可以为空～",
    "effective_url": "生效URL",
    "url_specific_rule_tip": "配置后规则只对该url生效，支持填写正则",
    "hit_color": "命中颜色",
    "tag": "标记 Tag"
  },
  "ExtractRegular": {
    "extract_selection_data_error": "提取选择数据错误：",
    "cannot_generate_data_extraction_rule": "无法生成数据提取规则："
  },
  "ExtraHTTPSelect": {
    "already_set_extra_count_tip": "已设置 {{len}} 个额外 {{tip}}"
  },
  "InputHTTPHeaderForm": {
    "enter_new_http_header": "输入新的 HTTP Header",
    "set_this_header": "设置该 Header"
  },
  "InputHTTPCookieForm": {
    "enter_new_cookie_value": "输入新的 Cookie 值",
    "advanced_configuration": "高级配置",
    "cookie_https_only": "仅允许 Cookie 在 HTTPS 生效",
    "samesite_policy": "SameSite 策略",
    "default_policy": "默认策略",
    "lax_policy": "Lax 策略",
    "strict_policy": "Strict 策略",
    "do_not_set": "不设置",
    "expires_timestamp": "Expires 时间戳",
    "add_this_cookie": "添加该 Cookie"
  },
  "RuleContent": {
    "use_right_tool_generate_regex": "可用右侧辅助工具，自动生成正则",
    "auto_extract_regex": "自动提取正则",
    "select_in_editor_generate_regex": "在编译器中选中内容，即可自动生成正则"
  },
  "AgentConfigModal": {
    "proxy_auth_config": "配置代理认证",
    "protocol": "协议",
    "address": "地址",
    "please_enter_address": "请输入地址",
    "invalid_address_format": "输入地址格式不正确",
    "example_address": "例如：127.0.0.1:7890",
    "username": "用户名",
    "please_enter_username": "请输入用户名",
    "password": "密码",
    "please_enter_password": "请输入密码"
  }
}