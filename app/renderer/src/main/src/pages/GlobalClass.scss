@use "../assets/global.scss" as global;
@use "../theme/componentsTheme/form.scss";
@use "../theme/componentsTheme/dropdown.scss";
@use "../theme/componentsTheme/tooltip.scss";
@use "../theme/componentsTheme/modal.scss";
@use "../theme/componentsTheme/list.scss";
@use "../theme/componentsTheme/notification.scss";
@use "../theme/componentsTheme/input.scss";
@use "../theme/componentsTheme/descriptions.scss";
@use "../theme/componentsTheme/pagination.scss";
@use "../theme/componentsTheme/slider.scss";
@use "../theme/componentsTheme/progress.scss";
@use "../theme/componentsTheme/menu.scss";
@use  "../theme/componentsTheme/PageHeader.scss";
@use  "../theme/componentsTheme/card.scss";
@use  "../theme/componentsTheme/result.scss";
@use  "../theme/componentsTheme/alert.scss";
@use  "../theme/componentsTheme/divider.scss";
@use  "../theme/componentsTheme/typography.scss";

// typography
body {
    color: var(--Colors-Use-Neutral-Text-1-Title);
    background-color: var(--Colors-Use-Neutral-Bg);
}

a {
    color: var(--Colors-Use-Main-Primary);
    &:hover {
        color: var(--Colors-Use-Main-Hover);
    }
}

/* 内容过长省略样式 */
.content-ellipsis {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    word-break: break-all;
}

.justify-space-between {
    display: flex;
    justify-content: space-between;
}

::-webkit-scrollbar {
    /*滚动条整体样式*/
    width: 8px;
    /*高宽分别对应横竖滚动条的尺寸*/
    height: 8px;
}

::-webkit-scrollbar-thumb {
    /*滚动条里面小方块*/
    border-radius: 10px;
    box-shadow: none;
    background-clip: padding-box;
    border: 1px solid transparent;
}

::-webkit-scrollbar-track {
    border-radius: 0;
    box-shadow: none;
    background: none;
}

::-webkit-scrollbar-thumb:hover {
    border-color: #c1c1c1;
}

.divider-style {
    width: 1px;
    height: 16px;
    background-color: #eaecf3;
}

// ========================== color ==========================
$colors: global.$colors;
$keyColor: map-keys($colors);
@for $c from 1 through length($keyColor) {
    $name: nth($keyColor, $c);
    $currentColor: map-get($colors, $name);
    .color-bg-#{"" + $name} {
        background-color: map-get($currentColor, "backgroundColor");
    }
    .color-opacity-bg-#{"" + $name} {
        background-color: map-get($currentColor, "opacityBackgroundColor");
    }
    .color-text-#{"" + $name} {
        color: map-get($currentColor, "textColor") !important;
    }
    .color-font-weight-#{"" + $name} {
        font-weight: map-get($currentColor, "fontWeight");
    }
}
